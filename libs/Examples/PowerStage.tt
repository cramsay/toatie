-- An example of our staging constucts with specialised power functions.

-- A power function where all of the unrolling is performed at "compile" time,
-- but leaving the application with the base until run-time. In terms of
-- hardware description, we'll use this to force evaluation of certain things
-- during the elaboration of our circuit, and defer certain things until the
-- circuit's run-time.

import Data.Nat

power : Nat -> < Nat > -> < Nat >
pat m =>
  power Z m = [| S Z |]
pat n m =>
  power (S n) m = [| mul (~m) (~(power n m)) |]

power' : Nat -> < Nat -> Nat >
power' Z = [| \x => S Z |]
pat n =>
  power' (S n) = [| \x => mul x (~(power' n) x) |]

-- Examples at REPL:
-- > power' 6
-- > \b => power 3 b
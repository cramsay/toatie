import Data.Vect

data Bit : Type where
  O : Bit
  I : Bit

xor : Bit -> Bit -> Bit
xor O O = O
xor O I = I
xor I O = I
xor I I = O

-- This looks good! We see that the quotes disappear and we eta-expand the xor with two arguments
circXor : <Bit -> Bit -> Bit>
circXor = [| xor |]

twoNots : < Vect 2 Bit -> Vect 2 Bit >
twoNots = unrollMap 2 {_} {_} [| xor I |]

fst : Vect 2 Bit -> Bit
pat x, xs =>
  fst (VCons {Bit} {1} x xs) = x

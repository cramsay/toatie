import Data.Nat
import Data.Vect
import ExampleVects

stagedVecPat : (n : Nat) -> <Vect n Nat> -> <Vect n Nat>
stagedVecPat Z     [| VNil {Nat} |] = [| VNil {Nat} |]
pat n : Nat, x : Nat, xs : Vect n Nat =>
  stagedVecPat (S n) [| VCons {Nat} {n} x xs |] = [| VCons {Nat} {n} (S x) ~(stagedVecPat n [| xs |]) |]

{-
-- This version has an implicit `n`, and therefore requires deconstruction of the quote... should error.
stagedVecPat' : {n : Nat} -> <Vect n Nat> -> <Vect n Nat>
stagedVecPat' {Z}     [| VNil {Nat} |] = [| VNil {Nat} |]
pat n : Nat, x : Nat, xs : Vect n Nat =>
  stagedVecPat' {S n} [| VCons {Nat} {n} x xs |] = [| VCons {Nat} {n} (S x) ~(stagedVecPat' {n} [| xs |]) |]
-}

-- \a:Nat => \b:Nat => \c:Nat => !(stagedtail {Nat} {2}) (VCons {Nat} {2} a (VCons {Nat} {1} b (VCons {Nat} {0} c (VNil {Nat}))))